{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael Cavazzani\\\\Desktop\\\\Programing\\\\React\\\\Projects\\\\Personal-Portifolio\\\\src\\\\Components\\\\Contents\\\\About.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./About.css\";\n\n// const About = () => {\n//   const [text, setText] = useState(\"\");\n//   const [scale, setScale] = useState(1);\n\n//   const fullText = \"Hi there, what's your name?\";\n\n//   useEffect(() => {\n//     let currentIndex = 0;\n//     const interval = setInterval(() => {\n//       setText((prevText) => prevText + fullText[currentIndex]);\n//       currentIndex++;\n//       if (currentIndex === fullText.length - 1) {\n//         clearInterval(interval);\n//         setTimeout(() => {\n//           setScale(1.5);\n//           setTimeout(() => {\n//             setScale(1);\n//           }, 300);\n//         }, 300);\n//       }\n//     }, 100);\n\n//     return () => {\n//       clearInterval(interval);\n//     };\n//   }, []);\n\n//   return (\n//     <div className=\"box-text\">\n//       <h1\n//         className=\"firstExample\"\n//         style={{ color: \"green\", transform: `scale(${scale})` }}\n//       >\n//         {text}\n//       </h1>\n//     </div>\n//   );\n// };\n\n// export default About;\nimport React, { useState, useEffect } from \"react\";\nimport \"./About.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [scale, setScale] = useState(1);\n  const [wordCount, setWordCount] = useState(0);\n  const fullText = \"Oi, qual é o seu nome?\";\n  useEffect(() => {\n    let currentIndex = 0;\n    const interval = setInterval(() => {\n      setText(prevText => prevText + fullText[currentIndex]);\n      currentIndex++;\n      if (currentIndex === fullText.length - 1) {\n        clearInterval(interval);\n        const words = text.split(\" \");\n        setWordCount(words.length);\n        setTimeout(() => {\n          setScale(1.5);\n          setTimeout(() => {\n            setScale(1);\n          }, 300);\n        }, 300);\n      }\n    }, 100);\n  }, []);\n  const splitText = text.split(\" \");\n  const coloredText = [];\n  for (let i = 0; i < splitText.length; i++) {\n    const word = splitText[i];\n    const color = i % 2 === 0 ? \"green\" : \"white\";\n    const span = /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color\n      },\n      children: word\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n    coloredText.push(span);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box-text\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"firstExample\",\n      children: coloredText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(About, \"Tfdq492BImVokyLk14qluJT8VGo=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","About","_s","text","setText","scale","setScale","wordCount","setWordCount","fullText","currentIndex","interval","setInterval","prevText","length","clearInterval","words","split","setTimeout","splitText","coloredText","i","word","color","span","style","children","fileName","_jsxFileName","lineNumber","columnNumber","push","className","_c","$RefreshReg$"],"sources":["C:/Users/Rafael Cavazzani/Desktop/Programing/React/Projects/Personal-Portifolio/src/Components/Contents/About.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"./About.css\";\r\n\r\n// const About = () => {\r\n//   const [text, setText] = useState(\"\");\r\n//   const [scale, setScale] = useState(1);\r\n\r\n//   const fullText = \"Hi there, what's your name?\";\r\n\r\n//   useEffect(() => {\r\n//     let currentIndex = 0;\r\n//     const interval = setInterval(() => {\r\n//       setText((prevText) => prevText + fullText[currentIndex]);\r\n//       currentIndex++;\r\n//       if (currentIndex === fullText.length - 1) {\r\n//         clearInterval(interval);\r\n//         setTimeout(() => {\r\n//           setScale(1.5);\r\n//           setTimeout(() => {\r\n//             setScale(1);\r\n//           }, 300);\r\n//         }, 300);\r\n//       }\r\n//     }, 100);\r\n\r\n//     return () => {\r\n//       clearInterval(interval);\r\n//     };\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div className=\"box-text\">\r\n//       <h1\r\n//         className=\"firstExample\"\r\n//         style={{ color: \"green\", transform: `scale(${scale})` }}\r\n//       >\r\n//         {text}\r\n//       </h1>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default About;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [scale, setScale] = useState(1);\r\n  const [wordCount, setWordCount] = useState(0);\r\n\r\n  const fullText = \"Oi, qual é o seu nome?\";\r\n\r\n  useEffect(() => {\r\n    let currentIndex = 0;\r\n    const interval = setInterval(() => {\r\n      setText((prevText) => prevText + fullText[currentIndex]);\r\n      currentIndex++;\r\n      if (currentIndex === fullText.length - 1) {\r\n        clearInterval(interval);\r\n        const words = text.split(\" \");\r\n        setWordCount(words.length);\r\n        setTimeout(() => {\r\n          setScale(1.5);\r\n          setTimeout(() => {\r\n            setScale(1);\r\n          }, 300);\r\n        }, 300);\r\n      }\r\n    }, 100);\r\n  }, []);\r\n\r\n  const splitText = text.split(\" \");\r\n  const coloredText = [];\r\n\r\n  for (let i = 0; i < splitText.length; i++) {\r\n    const word = splitText[i];\r\n    const color = i % 2 === 0 ? \"green\" : \"white\";\r\n    const span = (\r\n      <span key={i} style={{ color }}>\r\n        {word}\r\n      </span>\r\n    );\r\n    coloredText.push(span);\r\n  }\r\n\r\n  return (\r\n    <div className=\"box-text\">\r\n      <h1 className=\"firstExample\">{coloredText}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMY,QAAQ,GAAG,wBAAwB;EAEzCX,SAAS,CAAC,MAAM;IACd,IAAIY,YAAY,GAAG,CAAC;IACpB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCR,OAAO,CAAES,QAAQ,IAAKA,QAAQ,GAAGJ,QAAQ,CAACC,YAAY,CAAC,CAAC;MACxDA,YAAY,EAAE;MACd,IAAIA,YAAY,KAAKD,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;QACxCC,aAAa,CAACJ,QAAQ,CAAC;QACvB,MAAMK,KAAK,GAAGb,IAAI,CAACc,KAAK,CAAC,GAAG,CAAC;QAC7BT,YAAY,CAACQ,KAAK,CAACF,MAAM,CAAC;QAC1BI,UAAU,CAAC,MAAM;UACfZ,QAAQ,CAAC,GAAG,CAAC;UACbY,UAAU,CAAC,MAAM;YACfZ,QAAQ,CAAC,CAAC,CAAC;UACb,CAAC,EAAE,GAAG,CAAC;QACT,CAAC,EAAE,GAAG,CAAC;MACT;IACF,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,SAAS,GAAGhB,IAAI,CAACc,KAAK,CAAC,GAAG,CAAC;EACjC,MAAMG,WAAW,GAAG,EAAE;EAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACL,MAAM,EAAEO,CAAC,EAAE,EAAE;IACzC,MAAMC,IAAI,GAAGH,SAAS,CAACE,CAAC,CAAC;IACzB,MAAME,KAAK,GAAGF,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG,OAAO;IAC7C,MAAMG,IAAI,gBACRxB,OAAA;MAAcyB,KAAK,EAAE;QAAEF;MAAM,CAAE;MAAAG,QAAA,EAC5BJ;IAAI,GADID,CAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CACP;IACDV,WAAW,CAACW,IAAI,CAACP,IAAI,CAAC;EACxB;EAEA,oBACExB,OAAA;IAAKgC,SAAS,EAAC,UAAU;IAAAN,QAAA,eACvB1B,OAAA;MAAIgC,SAAS,EAAC,cAAc;MAAAN,QAAA,EAAEN;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA7CID,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}