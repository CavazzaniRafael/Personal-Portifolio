{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael Cavazzani\\\\Desktop\\\\Programing\\\\React\\\\Projects\\\\Personal-Portifolio\\\\src\\\\Components\\\\Contents\\\\About.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./About.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const fullText = \"Hi there, what's your name?\";\n  useEffect(() => {\n    let currentIndex = 0;\n    const interval = setInterval(() => {\n      setText(prevText => prevText + fullText[currentIndex]);\n      currentIndex++;\n      if (currentIndex === fullText.length - 1) {\n        clearInterval(interval);\n        setTimeout(() => {\n          setText(prevText => prevText + fullText[currentIndex]);\n        }, 1000);\n      }\n    }, 100);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(text); // Move the console.log inside a separate useEffect\n  }, [text]);\n  const words = text.split(\" \"); // Split the text into words\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box-text\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"firstExample\",\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"green\",\n          transitionDelay: `${index * 100}ms`\n        },\n        children: word + \" \"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(About, \"VMG6bSavi8+gEPntoVhxf+Ayd/w=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","About","_s","text","setText","fullText","currentIndex","interval","setInterval","prevText","length","clearInterval","setTimeout","console","log","words","split","className","children","map","word","index","style","color","transitionDelay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rafael Cavazzani/Desktop/Programing/React/Projects/Personal-Portifolio/src/Components/Contents/About.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const fullText = \"Hi there, what's your name?\";\r\n\r\n  useEffect(() => {\r\n    let currentIndex = 0;\r\n    const interval = setInterval(() => {\r\n      setText((prevText) => prevText + fullText[currentIndex]);\r\n      currentIndex++;\r\n      if (currentIndex === fullText.length - 1) {\r\n        clearInterval(interval);\r\n        setTimeout(() => {\r\n          setText((prevText) => prevText + fullText[currentIndex]);\r\n        }, 1000);\r\n      }\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(text); // Move the console.log inside a separate useEffect\r\n  }, [text]);\r\n\r\n  const words = text.split(\" \"); // Split the text into words\r\n\r\n  return (\r\n    <div className=\"box-text\">\r\n      <h1 className=\"firstExample\">\r\n        {words.map((word, index) => (\r\n          <span\r\n            key={index}\r\n            style={{ color: \"green\", transitionDelay: `${index * 100}ms` }}\r\n          >\r\n            {word + \" \"}\r\n          </span>\r\n        ))}\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMQ,QAAQ,GAAG,6BAA6B;EAE9CP,SAAS,CAAC,MAAM;IACd,IAAIQ,YAAY,GAAG,CAAC;IACpB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCJ,OAAO,CAAEK,QAAQ,IAAKA,QAAQ,GAAGJ,QAAQ,CAACC,YAAY,CAAC,CAAC;MACxDA,YAAY,EAAE;MACd,IAAIA,YAAY,KAAKD,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;QACxCC,aAAa,CAACJ,QAAQ,CAAC;QACvBK,UAAU,CAAC,MAAM;UACfR,OAAO,CAAEK,QAAQ,IAAKA,QAAQ,GAAGJ,QAAQ,CAACC,YAAY,CAAC,CAAC;QAC1D,CAAC,EAAE,IAAI,CAAC;MACV;IACF,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXK,aAAa,CAACJ,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACde,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC,CAAC,CAAC;EACrB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMY,KAAK,GAAGZ,IAAI,CAACa,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE/B,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBlB,OAAA;MAAIiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACzBH,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBrB,OAAA;QAEEsB,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,eAAe,EAAG,GAAEH,KAAK,GAAG,GAAI;QAAI,CAAE;QAAAH,QAAA,EAE9DE,IAAI,GAAG;MAAG,GAHNC,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA1CID,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AA4CX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}