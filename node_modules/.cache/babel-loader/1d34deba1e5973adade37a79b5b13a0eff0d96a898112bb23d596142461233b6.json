{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafael Cavazzani\\\\Desktop\\\\Programing\\\\React\\\\Projects\\\\Personal-Portifolio\\\\src\\\\Components\\\\Contents\\\\About.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { gsap } from \"gsap\";\nimport { SplitTextPlugin } from \"gsap/SplitText\";\nimport { SplitText } from \"gsap\";\nimport \"./About.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const quoteRef = useRef(null);\n  const splitTextTimeline = useRef(null);\n  const mySplitText = useRef(null);\n  useEffect(() => {\n    gsap.registerPlugin(SplitTextPlugin);\n    const $quote = quoteRef.current;\n    mySplitText.current = new SplitText($quote, {\n      type: \"words\"\n    });\n    splitTextTimeline.current = gsap.timeline();\n    gsap.set($quote, {\n      perspective: 400\n    });\n  }, []);\n  const kill = () => {\n    splitTextTimeline.current.clear().time(0);\n    mySplitText.current.revert();\n  };\n  const handleCharsClick = () => {\n    kill();\n    mySplitText.current.split({\n      type: \"chars, words\"\n    });\n    splitTextTimeline.current.from(mySplitText.current.chars, {\n      duration: 0.6,\n      scale: 4,\n      autoAlpha: 0,\n      rotationX: -180,\n      transformOrigin: \"100% 50%\",\n      ease: \"back\",\n      stagger: 0.02\n    });\n  };\n  const handleWordsClick = () => {\n    kill();\n    mySplitText.current.split({\n      type: \"words\"\n    });\n    mySplitText.current.words.forEach((el, index) => {\n      splitTextTimeline.current.from(el, {\n        duration: 0.6,\n        opacity: 0,\n        force3D: true\n      }, index * 0.01);\n      splitTextTimeline.current.from(el, {\n        duration: 0.6,\n        scale: index % 2 === 0 ? 0 : 2\n      }, index * 0.01);\n    });\n  };\n  const handleLinesClick = () => {\n    kill();\n    mySplitText.current.split({\n      type: \"lines\"\n    });\n    splitTextTimeline.current.from(mySplitText.current.lines, {\n      duration: 0.5,\n      opacity: 0,\n      rotationX: -120,\n      force3D: true,\n      transformOrigin: \"top center -150\",\n      stagger: 0.1\n    });\n  };\n  const handleCharsWordsLinesClick = () => {\n    kill();\n    mySplitText.current.split({\n      type: \"chars, words, lines\"\n    });\n    splitTextTimeline.current.from(mySplitText.current.chars, {\n      duration: 0.2,\n      autoAlpha: 0,\n      scale: 4,\n      force3D: true,\n      stagger: 0.01\n    }, 0.5).to(mySplitText.current.words, {\n      duration: 0.1,\n      color: \"#8FE402\",\n      scale: 0.9,\n      stagger: 0.1\n    }, \"words\").to(mySplitText.current.words, {\n      duration: 0.2,\n      color: \"white\",\n      scale: 1,\n      stagger: 0.1\n    }, \"words+=0.1\").to(mySplitText.current.lines, {\n      duration: 0.5,\n      x: 100,\n      autoAlpha: 0,\n      stagger: 0.2\n    });\n  };\n  const handleRevertClick = () => {\n    mySplitText.current.revert();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"demo\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote\",\n        ref: quoteRef,\n        children: \"This is a test that i am trying to ljsn dlsakjnlasj kalkjndasj kljanodjksa nadokdan lan odan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(About, \"t+Do3n8mp6RO405inUGRrPObcCk=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useRef","gsap","SplitTextPlugin","SplitText","jsxDEV","_jsxDEV","About","_s","quoteRef","splitTextTimeline","mySplitText","registerPlugin","$quote","current","type","timeline","set","perspective","kill","clear","time","revert","handleCharsClick","split","from","chars","duration","scale","autoAlpha","rotationX","transformOrigin","ease","stagger","handleWordsClick","words","forEach","el","index","opacity","force3D","handleLinesClick","lines","handleCharsWordsLinesClick","to","color","x","handleRevertClick","children","id","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rafael Cavazzani/Desktop/Programing/React/Projects/Personal-Portifolio/src/Components/Contents/About.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { gsap } from \"gsap\";\r\nimport { SplitTextPlugin } from \"gsap/SplitText\";\r\nimport { SplitText } from \"gsap\";\r\n\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  const quoteRef = useRef(null);\r\n  const splitTextTimeline = useRef(null);\r\n  const mySplitText = useRef(null);\r\n\r\n  useEffect(() => {\r\n    gsap.registerPlugin(SplitTextPlugin);\r\n    const $quote = quoteRef.current;\r\n    mySplitText.current = new SplitText($quote, { type: \"words\" });\r\n    splitTextTimeline.current = gsap.timeline();\r\n    gsap.set($quote, { perspective: 400 });\r\n  }, []);\r\n\r\n  const kill = () => {\r\n    splitTextTimeline.current.clear().time(0);\r\n    mySplitText.current.revert();\r\n  };\r\n\r\n  const handleCharsClick = () => {\r\n    kill();\r\n    mySplitText.current.split({ type: \"chars, words\" });\r\n    splitTextTimeline.current.from(mySplitText.current.chars, {\r\n      duration: 0.6,\r\n      scale: 4,\r\n      autoAlpha: 0,\r\n      rotationX: -180,\r\n      transformOrigin: \"100% 50%\",\r\n      ease: \"back\",\r\n      stagger: 0.02,\r\n    });\r\n  };\r\n\r\n  const handleWordsClick = () => {\r\n    kill();\r\n    mySplitText.current.split({ type: \"words\" });\r\n    mySplitText.current.words.forEach((el, index) => {\r\n      splitTextTimeline.current.from(\r\n        el,\r\n        { duration: 0.6, opacity: 0, force3D: true },\r\n        index * 0.01\r\n      );\r\n      splitTextTimeline.current.from(\r\n        el,\r\n        { duration: 0.6, scale: index % 2 === 0 ? 0 : 2 },\r\n        index * 0.01\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleLinesClick = () => {\r\n    kill();\r\n    mySplitText.current.split({ type: \"lines\" });\r\n    splitTextTimeline.current.from(mySplitText.current.lines, {\r\n      duration: 0.5,\r\n      opacity: 0,\r\n      rotationX: -120,\r\n      force3D: true,\r\n      transformOrigin: \"top center -150\",\r\n      stagger: 0.1,\r\n    });\r\n  };\r\n\r\n  const handleCharsWordsLinesClick = () => {\r\n    kill();\r\n    mySplitText.current.split({ type: \"chars, words, lines\" });\r\n    splitTextTimeline.current\r\n      .from(\r\n        mySplitText.current.chars,\r\n        { duration: 0.2, autoAlpha: 0, scale: 4, force3D: true, stagger: 0.01 },\r\n        0.5\r\n      )\r\n      .to(\r\n        mySplitText.current.words,\r\n        { duration: 0.1, color: \"#8FE402\", scale: 0.9, stagger: 0.1 },\r\n        \"words\"\r\n      )\r\n      .to(\r\n        mySplitText.current.words,\r\n        { duration: 0.2, color: \"white\", scale: 1, stagger: 0.1 },\r\n        \"words+=0.1\"\r\n      )\r\n      .to(mySplitText.current.lines, {\r\n        duration: 0.5,\r\n        x: 100,\r\n        autoAlpha: 0,\r\n        stagger: 0.2,\r\n      });\r\n  };\r\n\r\n  const handleRevertClick = () => {\r\n    mySplitText.current.revert();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"demo\">\r\n        <div id=\"quote\" ref={quoteRef}>\r\n          This is a test that i am trying to ljsn dlsakjnlasj kalkjndasj\r\n          kljanodjksa nadokdan lan odan\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}